plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.onthe7'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation' // NotEmpty
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.1.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // querydsl
    implementation 'com.querydsl:querydsl-apt'
    implementation 'com.querydsl:querydsl-jpa'

    annotationProcessor 'com.querydsl:querydsl-apt:4.2.1:jpa'
    annotationProcessor 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '28.2-jre'

    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.14'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // okhttp3
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'

    // Spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.auth0:java-jwt:3.19.1'

    /* Apache Commons */
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // logstash for JSON log format
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '5.3'

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20190722'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.5'

    /* swagger */
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"

    /* aws s3 */
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.288'


    // test
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

def activeProfile
tasks.register("bootRunLocal") {
    group = "application"
    description = "Runs the application with the local profile"
    doFirst {
        println "\n*** Runs the application with the local profile ***\n"
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "local")
        }
    }
    finalizedBy("bootRun")
}

tasks.register("bootRunDev") {
    group = "application"
    description = "Runs the application with the dev profile"
    doFirst {
        println "\n*** Runs the application with the dev profile ***\n"
        tasks.bootRun.configure {
            systemProperty("spring.profiles.active", "dev")
        }
    }
    finalizedBy("bootRun")
}

test {
    systemProperty 'spring.profiles.active', 'test'
    useJUnitPlatform()
}
